function createCalendarEventWithAvailability() {
//update the phrase trigger here and time duration
  var triggerPhrase = 'your trigger phrase';
  var senderEmail = 'sender@example.com';
  var zoomLink = 'https://zoom.us/link-to-meeting'; // Replace with your Zoom link template
  var eventTitle = 'Meeting Event';
  var durationMinutes = 30; // Event duration: 1/2 hour

  var threads = GmailApp.search('is:unread from:' + senderEmail);
  for (var i = 0; i < threads.length; i++) {
    var messages = threads[i].getMessages();
    for (var j = 0; j < messages.length; j++) {
      var message = messages[j];
      var body = message.getPlainBody();

      if (body.toLowerCase().includes(triggerPhrase.toLowerCase())) {
        var recipientEmail = message.getTo();
        var recipientCalendarId = getCalendarId(recipientEmail);

        var startDateTime = findAvailableTimeSlot(recipientCalendarId, durationMinutes);
        if (startDateTime) {
          var endDateTime = new Date(startDateTime.getTime() + durationMinutes * 60 * 1000);

          var event = {
            'summary': eventTitle,
            'start': {
              'dateTime': startDateTime.toISOString(),
            },
            'end': {
              'dateTime': endDateTime.toISOString(),
            },
            'description': 'Zoom Link: ' + zoomLink,
          };

          Calendar.Events.insert(event, recipientCalendarId);
          message.markRead();
        }
      }
    }
  }
}


function getCalendarId(email) {
  var calendars = Calendar.CalendarList.list().items;
  for (var i = 0; i < calendars.length; i++) {
    var calendar = calendars[i];
    if (calendar.accessRole === 'owner' && calendar.primaryEmail === email) {
      return calendar.id;
    }
  }
  throw new Error('Calendar ID not found for email: ' + email);
}
